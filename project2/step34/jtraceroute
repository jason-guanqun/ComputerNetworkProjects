#!/usr/bin/python
import socket
import json
import argparse
import time
import threading

UDP_IP = "127.0.0.1"
# UDP_PORT = 5005
parser = argparse.ArgumentParser(description='UDP receiver')
parser.add_argument('-p', dest='rec_port_num', action='store', default=5001, type=int)
args, unknownargs = parser.parse_known_args()

UDP_PORT = args.rec_port_num

# extract IPs and Ports
UDP_IPs = [each.split(':')[0] for each in unknownargs]
UDP_PORTs = [each.split(':')[1] for each in unknownargs]

my_addr = ":".join([UDP_IP,str(UDP_PORT)])
start_addr = ":".join([UDP_IPs[0],str(UDP_PORTs[0])])
end_addr = ":".join([UDP_IPs[1],str(UDP_PORTs[1])])

######################## Bind socket ########################

sock = socket.socket(socket.AF_INET, # Internet
                     socket.SOCK_DGRAM) # UDP
sock.bind((UDP_IP, UDP_PORT))

trace_data = { "Type" : "TRACE", "Destination" : end_addr, "Origin": my_addr, "TRACE" : []}
send_data = json.dumps(trace_data)

def daemon():
	while True:
		sock.sendto(send_data, (UDP_IPs[0], int(UDP_PORTs[0])))
		time.sleep(10)
		
t = threading.Thread(target = daemon, args = ())
t.daemon = True
t.start()

while True:
	received_data, recv_addr = sock.recvfrom(2048)
	received_table = json.loads(received_data)
	for path in received_table['TRACE']:
		print path
	print "I know the routing path!"
	# exits after having received the response.
	exit()
